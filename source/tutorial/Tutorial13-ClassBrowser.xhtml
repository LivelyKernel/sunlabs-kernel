<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html debug="false" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Lively Kernel Tutorial</title>
  </head>
  
  <body topmargin="0" leftmargin="0">
    <script src="../firebug/firebug.js"/>
    <script src="../prototype.js"/>
    <script src="../fontinfo.js"/>
    
    <h2>Lively Kernel Tutorial: (13) Class Browser</h2>
    <button onclick="window.location='index.xhtml'">Back to Introduction</button>
    <button onclick="window.location='Tutorial12-OnTheFly.xhtml'">PREVIOUS</button>
    <button onclick="window.location='Tutorial13-ClassBrowser.js'">Source code of this demo</button>
    <button onclick="window.location='Tutorial14-Inspector.xhtml'">NEXT</button>
    <hr />
    Lively Kernel has a <i>class browser</i> that allows
    the behavior of the system to be viewed and edited interactively.<br />
    The upper left panel of the browser contains the names of the 
    Lively Kernel (JavaScript) classes in the system. <br />
    When you select one of them, the upper right panel shows
    all the methods (functions) of that class.<br />
    When you choose one of the methods, the lower panel shows the
    source code of the method.
    <p />    
        <img src="Tutorial13-Image1.PNG"/>
    <p />
    Notes:<ul>
    <li>To save changes after editing a method, use the "<i>accept changes</i>"
    operation that is available in the popup menu of the method panel.<br />
    You can also use the keyboard shortcuts defined below.</li>
    </ul>
    There are various keyboard shortcuts available to edit the methods.<br />
    (NOTE: these shortcuts do not work on all browsers. In some browsers
    you may have to use the "<b>Alt Gr</b>" key instead):<ul>
    <li> <i>Alt-S</i> ("Save-It"): Save (accept) the changes</li>
    <li> <i>Alt-A</i>: Select All</li>
    <li> <i>Alt-X</i>: Cut</li>
    <li> <i>Alt-C</i>: Copy</li>
    <li> <i>Alt-V</i>: Paste</li>
    <li> <i>Alt-Z</i>: Undo</li>
    </ul>
    Some additional comments on text editing:<ul>
    <li>Typing replaces selection.</li>
    <li>Double-clicking selects a word; triple-clicking selects the entire text.</li>
    <li>Double-clicking near a bracket, parenthesis or a JavaScript comment (/* ... */) 
    selects text inside the brackets/parentheses/comment.</li>
    </ul>
    <p />
    <hr />
    <b>Try it yourself!</b> Try viewing the methods of class <i>RectShape</i>.<br />
    Try editing some of the methods to make changes to the behavior of the system
    itself.<br />
    For instance, if you modify the method <i>RectShape.setFill</i> as shown below,
    you change the way menus and many other objects in the system are drawn.<br />
    You have to accept the changes by pressing <i>Alt-S</i> or by choosing 
    the "<i>evaluate as JavaScript code</i>"
    popup menu item of the text that you just edited.  
    <p />
    <code>
    RectShape.prototype.setFill = function(string)<br />
    {<br />
      this.setAttributeNS(null, "fill", Color.green);<br />
    }<br />
    </code>
    <p />
    Try opening any popup menu after completing this change.<br />
    The background color of the menu should now be green.
    <p />
    <div>  
        <svg id="canvas"
             width="80%" height="100%" 
             xmlns="http://www.w3.org/2000/svg" 
             xmlns:lively="http://www.experimentalstuff.com/Lively"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             xmlns:xhtml="http://www.w3.org/1999/xhtml"
             xmlns:D="DAV"
             xml:space="preserve"
             zoomAndPan="disable">
        
        <defs id="Defaults">
        
        <script type="text/ecmascript" xlink:href="../defaultconfig.js"/>
        <script type="text/ecmascript"> <![CDATA[ var Config = {} ]]> </script>
        <script type="text/ecmascript" xlink:href="../prototype.js"/>
        <script type="text/ecmascript" xlink:href="../localconfig.js"/> <!-- ignored if file not there -->
        <script type="text/ecmascript" xlink:href="../Core.js"/>
        <script type="text/ecmascript" xlink:href="../svgtext-compat.js"/>
        <script type="text/ecmascript" xlink:href="../Text.js"/>
        <xhtml:iframe onload="Loader.insertContents(this)"  src="../Definitions.svg"/>
        <script type="text/ecmascript" xlink:href="../Widgets.js"/>
        <script type="text/ecmascript" xlink:href="../Tools.js"/>
        <script type="text/ecmascript" xlink:href="Tutorial13-ClassBrowser.js"/>
        
        </defs>
        
        </svg>
    </div>
    <p />
    <hr />
  </body>
</html>
