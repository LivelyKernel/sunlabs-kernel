<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html debug="false" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Lively Kernel Tutorial</title>
  </head>
  
  <body topmargin="0" leftmargin="0">
    <script src="../firebug/firebug.js"/>
    <script src="../prototype.js"/>
    <script src="../fontinfo.js"/>
    
    <h2>Lively Kernel Tutorial: (12) Modifying Objects and JavaScript Code on the Fly</h2>
    <button onclick="window.location='index.xhtml'">Back to Introduction</button>
    <button onclick="window.location='Tutorial11-Subworlds.xhtml'">PREVIOUS</button>
    <button onclick="window.location='Tutorial12-OnTheFly.js'">Source code of this demo</button>
    <button onclick="window.location='Tutorial13-ClassBrowser.xhtml'">NEXT</button>
    <hr />
    <p>
    Since Lively Kernel is built with JavaScript,
    a highly dynamic programming language that does not require
    applications to be compiled ahead of time, virtually every object
    in the system can be modified at runtime.
    On this tutorial page we have included a number of textual scripts
    that you can execute and modify on the fly.<br />
    You can execute the scripts using the "<i>evaluate as JavaScript code</i>"
    feature that is available in the popup menu of TextMorphs.
    </p>    
        <img src="Tutorial12-Image1.PNG"/>
        <img src="Tutorial12-Image2.PNG"/>
    <hr />
    <p>
    Notes:<ul>
    <li>To open the popup menu for TextMorphs, press the Alt key
    while clicking the border area of the TextMorph (area surrounding the text).</li>
    </ul>
    TextMorphs can be edited and evaluated also using the following keyboard shortcuts.<br />
    (NOTE: these shortcuts do not work on all browsers. In some browsers
    you may have to use the "<b>Alt Gr</b>" key instead):<ul>
    <li> <i>Alt-S</i> ("Save-It"): Save (accept) the changes / evaluate the entire contents as JavaScript code</li>
    <li> <i>Alt-D</i> ("Do-It"): Evaluate the selected text as JavaScript code</li>
    <li> <i>Alt-P</i> ("Print-It"): Evaluate the selected text as JavaScript code and replace selection with the result</li>
    <li> <i>Alt-I</i> ("Inspect-It"): Open inspector for the object<br /></li>
    <li> <i>Alt-A</i>: Select All</li>
    <li> <i>Alt-X</i>: Cut</li>
    <li> <i>Alt-C</i>: Copy</li>
    <li> <i>Alt-V</i>: Paste</li>
    <li> <i>Alt-Z</i>: Undo</li>
    </ul>    
    </p >
    <p>
    Some additional comments on text editing:<ul>
    <li>Typing replaces selection.</li>
    <li>Double-clicking selects a word; triple-clicking selects the entire text.</li>
    <li>Double-clicking near a bracket, parenthesis or a JavaScript comment (/* ... */) 
    selects text inside the brackets/parentheses/comment.</li>
    </ul>
    </p>
    <hr />
    <p>
    <b>Try it yourself!</b> Try evaluating the scripts that have been provided 
    in the four TextMorphs below.<br />
    Try modifying the scripts yourself to generate different kinds of graphical objects.<br />
    Note that the objects generated by these scripts are full-fledged graphical objects that can
    be edited using handles, menus and other features presented earlier in this tutorial.
    </p >
    <div>  
        <svg id="canvas"
             width="80%" height="100%" 
             xmlns="http://www.w3.org/2000/svg" 
             xmlns:lively="http://www.experimentalstuff.com/Lively"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             xmlns:xhtml="http://www.w3.org/1999/xhtml"
             xmlns:D="DAV"
             xml:space="preserve"
             zoomAndPan="disable">
        
        <defs id="Defaults">
        
        <script type="text/ecmascript" xlink:href="../defaultconfig.js"/>
        <script type="text/ecmascript"> <![CDATA[ var Config = {} ]]> </script>
        <script type="text/ecmascript" xlink:href="../prototype.js"/>
        <script type="text/ecmascript" xlink:href="../localconfig.js"/> <!-- ignored if file not there -->
        <script type="text/ecmascript" xlink:href="../Core.js"/>
        <script type="text/ecmascript" xlink:href="../svgtext-compat.js"/>
        <script type="text/ecmascript" xlink:href="../Text.js"/>
        <xhtml:iframe onload="Loader.insertContents(this)"  src="../Definitions.svg"/>
        <script type="text/ecmascript" xlink:href="../Widgets.js"/>
        <script type="text/ecmascript" xlink:href="../Tools.js"/>
        <script type="text/ecmascript" xlink:href="Tutorial12-OnTheFly.js"/>
        
        </defs>
        
        </svg>
    </div>

    <hr />
  </body>
</html>
