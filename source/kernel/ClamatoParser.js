module('ClamatoParser.js').requires('ometa/parser.js').toRun(function() {
ClamatoParser=Object.delegated(Parser,{"identifier":function(){var $elf=this,x,xs;return (function(){x=$elf._apply("letter");xs=$elf._many(function(){return $elf._apply("letterOrDigit")});return [x].concat(xs).join("")})()},"unaryId":function(){var $elf=this,x;return (function(){x=$elf._apply("identifier");$elf._not(function(){return $elf._applyWithArgs("exactly",":")});return x})()},"variable":function(){var $elf=this,x;return (function(){x=$elf._apply("identifier");return ({"isVariable": true,"name": x})})()},"expression":function(){var $elf=this,x;return (function(){x=$elf._or((function(){return $elf._apply("assignation")}),(function(){return $elf._apply("evaluation")}));return x})()},"assignation":function(){var $elf=this;return $elf._applyWithArgs("exactly",9)},"evaluation":function(){var $elf=this,rec,node;return (function(){rec=$elf._apply("primary");$elf._apply("spaces");node=$elf._or((function(){return $elf._apply("messageSend")}),(function(){return (function(){$elf._apply("empty");return ({})})()}));return (function (){node["receiver"]=rec;return node})()})()},"primary":function(){var $elf=this;return $elf._apply("variable")},"messageSend":function(){var $elf=this,node;return (function(){node=$elf._apply("unaryMessage");return (function (){node["isMessage"]=true;return node})()})()},"unaryMessage":function(){var $elf=this,name;return (function(){name=$elf._apply("unaryId");return ({"messageName": name,"isUnary": true})})()},"log":function(){var $elf=this,x;return (function(){x=$elf._apply("anything");return console.log(x)})()}})
});