module('ClamatoParser.js').requires('ometa/parser.js').toRun(function() {
{ClamatoParser=Object.delegated(Parser,{"identifier":function(){var $elf=this,x,xs;return (function(){x=$elf._apply("letter");xs=$elf._many(function(){return $elf._apply("letterOrDigit")});return [x].concat(xs).join("")})()},"unaryId":function(){var $elf=this,x;return (function(){x=$elf._apply("identifier");$elf._not(function(){return $elf._applyWithArgs("exactly",":")});return x})()},"binaryOp":function(){var $elf=this,c,cs;return (function(){cs=$elf._many1(function(){return (function(){c=$elf._apply("char");$elf._pred(ClamatoParser.isBinaryChar(c));return c})()});return cs.join("")})()},"keywordPart":function(){var $elf=this,x;return (function(){x=$elf._apply("identifier");$elf._applyWithArgs("exactly",":");return (x + ":")})()},"literal":function(){var $elf=this,v;return (function(){v=$elf._apply("numberLiteral");return ({"isLiteral": true,"value": v})})()},"numberLiteral":function(){var $elf=this,sign,ns;return (function(){sign=$elf._or((function(){return (function(){$elf._applyWithArgs("exactly","+");return (1)})()}),(function(){return (function(){$elf._applyWithArgs("exactly","-");return (-(1))})()}),(function(){return (function(){$elf._apply("empty");return (1)})()}));ns=$elf._many1(function(){return $elf._apply("digit")});return (sign * Number(ns.inject("",(function (num,ea){return (num + ea)}))))})()},"variable":function(){var $elf=this,x;return (function(){x=$elf._apply("identifier");return ({"isVariable": true,"name": x})})()},"expression":function(){var $elf=this,x;return (function(){x=$elf._or((function(){return $elf._apply("assignation")}),(function(){return $elf._apply("evaluation")}));return x})()},"assignation":function(){var $elf=this;return $elf._applyWithArgs("exactly",9)},"evaluation":function(){var $elf=this,rec,node;return (function(){rec=$elf._apply("primary");$elf._apply("spaces");node=$elf._or((function(){return $elf._apply("messageSend")}),(function(){return (function(){$elf._apply("empty");return ({})})()}));return (function (){node["receiver"]=rec;return node})()})()},"primary":function(){var $elf=this;return (function(){$elf._apply("spaces");return $elf._or((function(){return $elf._apply("variable")}),(function(){return $elf._apply("literal")}))})()},"messageSend":function(){var $elf=this,node;return (function(){node=$elf._or((function(){return $elf._apply("unaryMsg")}),(function(){return $elf._apply("binaryMsg")}),(function(){return $elf._apply("keywordMsg")}));return (function (){node["isMessage"]=true;return node})()})()},"unaryMsg":function(){var $elf=this,msgName;return (function(){msgName=$elf._apply("unaryId");return ({"messageName": msgName,"isUnary": true})})()},"binaryMsg":function(){var $elf=this,msgName,arg;return (function(){msgName=$elf._apply("binaryOp");arg=$elf._apply("binaryMsgArg");return ({"messageName": msgName,"arguments": [arg],"isBinary": true})})()},"binaryMsgArg":function(){var $elf=this;return $elf._or((function(){return (function(){$elf._apply("primary");return $elf._many1(function(){return $elf._apply("unaryMsg")})})()}),(function(){return $elf._apply("primary")}))},"keywordMsg":function(){var $elf=this,keyword,arg,partsAndArgs;return (function(){partsAndArgs=$elf._many1(function(){return (function(){$elf._apply("spaces");keyword=$elf._apply("keywordPart");arg=$elf._apply("keywordMsgArg");return [keyword,arg]})()});return (function (){var name="";var args=[];partsAndArgs.forEach((function (ea){name+=ea[(0)];args.push(ea[(1)])}));return ({"messageName": name,"arguments": args,"isKeyword": true})})()})()},"keywordMsgArg":function(){var $elf=this;return $elf._apply("binaryMsgArg")},"log":function(){var $elf=this,x;return (function(){x=$elf._apply("anything");return console.log(x)})()}});ClamatoParser["isBinaryChar"]=(function (c){var x=c.charCodeAt((0));return (((((((((((((((((x >= (1)) && (x <= (8))) || (x == (11))) || ((x >= (14)) && (x <= (29)))) || (x == (31))) || (x == (33))) || (x == (37))) || (x == (38))) || ((x >= (42)) && (x <= (45)))) || (x == (47))) || ((x >= (60)) && (x <= (64)))) || (x == (92))) || (x == (96))) || ((x >= (126)) && (x <= (191)))) || (x == (215))) || (x == (247))) || (x == (256)))})}
});